plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'com.google.protobuf' version '0.8.8'
}

group 'com.uddernetworks.holysheet'
version '1.0.0'

sourceCompatibility = 11
mainClassName = 'com.uddernetworks.holysheet.HolySheet'
//mainClassName = 'com.uddernetworks.holysheet.grpc.GRPCClient'

repositories {
    mavenCentral()
}

def grpcVersion = '1.26.0'
def protobufVersion = '3.11.0'
def protocVersion = protobufVersion

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-log4j12:1.7.25'

    implementation 'org.apache.commons:commons-text:1.7'
    implementation 'org.apache.commons:commons-compress:1.20'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'info.picocli:picocli:4.1.2'
    annotationProcessor 'info.picocli:picocli-codegen:4.1.2'

    implementation 'com.google.api-client:google-api-client:1.30.1'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.30.1'
    implementation 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev581-1.25.0'

    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    implementation "com.github.luben:zstd-jni:1.4.4-7"


    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

run {
    args = ['-g=8888']
    standardInput = System.in
    jvmArgs("--add-opens", "jdk.jshell/jdk.jshell=ALL-UNNAMED")
    jvmArgs("--add-opens", "java.base/jdk.internal.misc=ALL-UNNAMED")
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}
